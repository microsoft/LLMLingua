"""

Module setup

This module is designed for configuring the package installation for LLMLingua, a library aiming to improve efficiency in language model inferences by compressing prompts and key-value caches.

Functions:
    setup(): Sets up the package for installation using setuptools.

The setup function is configured with package metadata, including the package name, version, author details, and more. It relies on the VERSION variable, which is populated by executing code from a 'version.py' file in the package directory. This function defines the dependencies required for installing and developing the package, such as 'transformers', 'torch', and 'gzip'. It also specifies additional dependencies for quality assurance and development needs, like 'black' for code formatting and 'flake8' for linting.

The package metadata includes a detailed description of LLMLingua, its licensing information (MIT License), its compatibility with Python versions (3.8.0 and above), among other attributes. The provided long description is sourced from a 'README.md' file and content type is specified as 'text/markdown'. 'extras_require' is set to include dependencies for 'dev' and 'quality', and the package is marked as not safe for zipped installation with 'zip_safe' as False.

The module uses the setuptools library, and its configuration enables finding packages within a specified directory using 'find_packages' and details the setup process with the 'setup' function call, providing necessary metadata and options for the LLMLingua package installation.

Note: Documentation automatically generated by https://undoc.ai
"""
from setuptools import find_packages, setup

# PEP0440 compatible formatted version, see:
# https://www.python.org/dev/peps/pep-0440/
#
# release markers:
#   X.Y
#   X.Y.Z   # For bugfix releases
#
# pre-release markers:
#   X.YaN   # Alpha release
#   X.YbN   # Beta release
#   X.YrcN  # Release Candidate
#   X.Y     # Final release

# version.py defines the VERSION and VERSION_SHORT variables.
# We use exec here so we don't import allennlp whilst setting up.
VERSION = {}  # type: ignore
with open("llmlingua/version.py", "r") as version_file:
    exec(version_file.read(), VERSION)

INSTALL_REQUIRES = [
    "transformers>=4.26.0",
    "torch",
    "tiktoken",
    "nltk",
    "numpy",
]
QUANLITY_REQUIRES = [
    "black==21.4b0",
    "flake8>=3.8.3",
    "isort>=5.5.4",
]
DEV_REQUIRES = INSTALL_REQUIRES + QUANLITY_REQUIRES

setup(
    name="llmlingua",
    version=VERSION["VERSION"],
    author="The LLMLingua team",
    author_email="hjiang@microsoft.com",
    description="To speed up LLMs' inference and enhance LLM's perceive of key information, compress the prompt and KV-Cache, which achieves up to 20x compression with minimal performance loss.",
    long_description=open("README.md").read(),
    long_description_content_type="text/markdown",
    keywords="Prompt Compression, LLMs, Inference Acceleration, Black-box LLMs, Efficient LLMs",
    license="MIT License",
    url="https://github.com/microsoft/LLMLingua",
    classifiers=[
        "Intended Audience :: Science/Research",
        "Development Status :: 3 - Alpha",
        "Programming Language :: Python :: 3",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ],
    package_dir={"": "./"},
    packages=find_packages("./"),
    extras_require={
        "dev": DEV_REQUIRES,
        "quality": QUANLITY_REQUIRES,
    },
    install_requires=INSTALL_REQUIRES,
    include_package_data=True,
    python_requires=">=3.8.0",
    zip_safe=False,
)
